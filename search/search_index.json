{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"RRHQD","text":""},{"location":"index.html#introduction","title":"Introduction","text":"<p>Important</p>"},{"location":"index.html#important","title":"Important","text":"<p>This software is still in development.</p> <p>Please report bugs to Github</p>"},{"location":"Setup-Checkmk.html","title":"Setup a Checkmk docker","text":""},{"location":"Setup-Checkmk.html#set-up-instructions","title":"Set up instructions:","text":"<p>Follow the setup these instructions to configure the system.</p>"},{"location":"Setup-Cloudflare.html","title":"Setup a Cloudflare Tunnel Docker","text":""},{"location":"Setup-Cloudflare.html#set-up-instructions","title":"Set up instructions:","text":"<p>Follow the setup these instructions to configure the system.</p>"},{"location":"Setup-Cloudflare.html#detecting-os-and-setting-sudo","title":"Detecting OS and Setting Sudo:","text":"<p>Detecting OS and Setting Sudo</p> <ul> <li>The script starts by determining the operating system to adjust command prefixes accordingly. If the OS is Ubuntu, Kali, Linux Mint, or Zorin, it sets USE_SUDO to \"sudo\".</li> </ul>"},{"location":"Setup-Cloudflare.html#creating-appdata-directory-and-setting-permissions","title":"Creating Appdata Directory and Setting Permissions:","text":"<p>Creating Appdata Directory and Setting Permissions</p> <ul> <li>A directory, /mnt/user/appdata/cloudflared/, is created, and its permissions are set to 777. This directory seems to be a storage location for Cloudflared configurations.</li> </ul>"},{"location":"Setup-Cloudflare.html#running-cloudflare-tunnel-login-command","title":"Running Cloudflare Tunnel Login Command:","text":"<p>Running Cloudflare Tunnel Login Command</p> <ul> <li>The script runs a Docker command to log in to the Cloudflare Tunnel, interacting with the /mnt/user/appdata/cloudflared/ directory.</li> </ul>"},{"location":"Setup-Cloudflare.html#creating-a-cloudflare-tunnel","title":"Creating a Cloudflare Tunnel:","text":"<p>Creating a Cloudflare Tunnel</p> <ul> <li>Another Docker command is used to create a Cloudflare tunnel. The configuration is stored in the same directory, and the tunnel is named based on user input.</li> </ul>"},{"location":"Setup-Cloudflare.html#configuring-cloudflare-tunnel-for-websites","title":"Configuring Cloudflare Tunnel for Website(s):","text":"<p>Configuring Cloudflare Tunnel for Website(s)</p> <ul> <li> <p>The script prompts the user for information about the website(s) they want to host via the Cloudflare Tunnel. It asks for the number of sites, tunnel UUID, protocol (http/https), reverse proxy IP, port, and domain.</p> </li> <li> <p>Based on the number of sites, it generates a configuration file (config.yml) in the /mnt/user/appdata/cloudflared/ directory.</p> </li> </ul>"},{"location":"Setup-Cloudflare.html#starting-the-cloudflare-tunnel","title":"Starting the Cloudflare Tunnel:","text":"<p>Starting the Cloudflare Tunnel</p> <ul> <li> <p>The script concludes by starting the Cloudflare tunnel in detached mode, utilizing the configuration provided by the user.</p> </li> <li> <p>Additionally, for cases where the user wants to host multiple sites, the script uses dialog to display a message box instructing them to manually configure the generated config.yml file for additional sites.</p> </li> </ul>"},{"location":"Setup-Deluge.html","title":"Setup a Deluge Docker","text":""},{"location":"Setup-Deluge.html#set-up-instructions","title":"Set up instructions:","text":"<p>Follow the setup these instructions to configure the system.</p>"},{"location":"Setup-Deluge.html#user-input-for-docker-image","title":"User Input for Docker Image:","text":"<p>Docker Image</p> <ul> <li>The script prompts the user to input the Docker image for Deluge. If no input is provided, it defaults to \"lscr.io/linuxserver/deluge:latest\".</li> </ul>"},{"location":"Setup-Deluge.html#user-input-for-container-name","title":"User Input for Container Name:","text":"<p>Container Name</p> <ul> <li>The user is asked to enter a name for the Docker container. If no input is given, it defaults to \"deluge-container\".</li> </ul>"},{"location":"Setup-Deluge.html#user-input-for-deluge-root-folder-and-download-folder","title":"User Input for Deluge Root Folder and Download Folder:","text":"<p>Folders</p> <ul> <li>The script requests the Deluge root folder and download folder. If skipped, default settings (./Data/config for Deluge root folder and ./Data/downloads for the download folder) are used.</li> </ul>"},{"location":"Setup-Deluge.html#docker-compose-file-generation","title":"Docker Compose File Generation:","text":"<p>Docker Compose Generation</p> <ul> <li>It sets up a subfolder for Docker Compose files (./RRHQD-Dockers/Deluge) and creates a Docker Compose file (docker-compose-$CONTAINER_NAME.yml).</li> </ul>"},{"location":"Setup-Deluge.html#docker-compose-file-content","title":"Docker Compose File Content:","text":"<p>Docker Compose Content</p> <ul> <li>The content is generated dynamically using a heredoc. It includes specifications for the Docker Compose version, Deluge service settings (image, container name, network mode, environment variables, volume mappings, ports, and restart policy).</li> </ul>"},{"location":"Setup-Deluge.html#folder-creation","title":"Folder Creation:","text":"<p>Folder Creation</p> <ul> <li>The script ensures the existence of the subfolder for Docker Compose files, creating it if necessary.</li> </ul>"},{"location":"Setup-Deluge.html#inform-user-and-start-container","title":"Inform User and Start Container:","text":"<p>Inform User and Start Container</p> <ul> <li>The user is informed that the Docker Compose file for Deluge has been created. The script attempts to start the Deluge container using docker compose -f $COMPOSE_FILE up -d.</li> </ul>"},{"location":"Setup-Deluge.html#check-container-status","title":"Check Container Status:","text":"<p>Check Container Status</p> <ul> <li>After the attempt to start the container, it checks if the Docker container has started successfully by querying Docker for the container's ID.</li> </ul>"},{"location":"Setup-Deluge.html#user-notification","title":"User Notification:","text":"<p>User Notification</p> <ul> <li>If the container started successfully, a success message is displayed using dialog. Otherwise, an error message is shown, and the script exits with an error code.</li> </ul>"},{"location":"Setup-Linkwarden.html","title":"Setup a Linkwarden docker","text":""},{"location":"Setup-Linkwarden.html#set-up-instructions","title":"Set up instructions:","text":"<p>Follow the setup these instructions to configure the system.</p>"},{"location":"Setup-Linkwarden.html#nextauth-secret","title":"Nextauth secret:","text":"<p>Nextauth secret</p> <p>NEXTAUTH_SECRET should look like <code>^7yTjn@G$j@KtLh9&amp;@UdMpdfDZ</code></p> <p>This step cannot be skipped.</p>"},{"location":"Setup-Linkwarden.html#nextauth-url","title":"Nextauth URL:","text":"<p>Nextauth URL</p> <p>NEXTAUTH_URL should look like <code>http://localhost:3000/api/v1/auth</code> </p> <p>It can also be a FQDN or IP if FQDN then <code>https://yourdomain.com/api/v1/auth</code> and no ports.</p> <p>This step cannot be skipped.</p>"},{"location":"Setup-Linkwarden.html#postgres-password","title":"Postgres password:","text":"<p>Postgres password</p> <p>POSTGRES_PASSWORD should be set to a strong password</p> <p>This step cannot be skipped.</p>"}]}