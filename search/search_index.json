{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"RRHQD","text":""},{"location":"index.html#introduction","title":"Introduction","text":"<p>Important</p> <p>This software is still in development.</p> <p>Please report bugs to Github</p>"},{"location":"index.html#download-rrhqd","title":"Download RRHQD","text":"<p>Download</p> <ul> <li>Download the latest version of the software from Github</li> </ul>"},{"location":"MkDocs/ACS-commands.html","title":"Easy Command","text":""},{"location":"MkDocs/ACS-commands.html#getting-started","title":"Getting Started","text":"<p>Easy command</p>"},{"location":"MkDocs/ACS-commands.html#setup-easy-command","title":"Setup Easy Command","text":"<p>After the install has finished you can use these commands for quick access and control</p> <p>Run this command to enable the custom commands</p> <pre><code>source ~/.bashrc\n</code></pre>"},{"location":"MkDocs/ACS-commands.html#add-new-url-overview","title":"Add new url + Overview","text":"Add url Get an easy overview"},{"location":"MkDocs/ACS-commands.html#add-url","title":"Add url","text":"<p>This is how you add more then one url</p> <p>You can also modify the <code>~/plex/media/url_file.txt</code> this file contains all the urls</p> <pre><code>add-url\n</code></pre>"},{"location":"MkDocs/ACS-commands.html#get-an-easy-overview","title":"Get an easy overview","text":"<p>Quickly get an overview of the downloading docker containers.</p> <p>Use this command</p> <pre><code>get-overview\n</code></pre>"},{"location":"MkDocs/ACS-commands.html#stop-or-start-an-download","title":"Stop or start an download","text":"Trigger an manuel download Stop an download"},{"location":"MkDocs/ACS-commands.html#start-an-download","title":"Start an download","text":"<p>Want to download a new video manually that has not yet been downloaded automatically.</p> <p>Use this command</p> <pre><code>start-download\n</code></pre>"},{"location":"MkDocs/ACS-commands.html#stop-an-download","title":"Stop an download","text":"<p>Want to stop an download, if you need it to abort a download</p> <p>Use this command</p> <pre><code>stop-download\n</code></pre>"},{"location":"MkDocs/ACS-commands.html#stop-or-start-all-running-dockers","title":"Stop or start all running dockers","text":"start all running dockers Stop all running dockers"},{"location":"MkDocs/ACS-commands.html#start-all-running-dockers","title":"Start all running dockers","text":"<p>Want to start all the docker at ones </p> <p>Use this command</p> <pre><code>start-all\n</code></pre>"},{"location":"MkDocs/ACS-commands.html#stop-all-running-dockers","title":"Stop all running dockers","text":"<p>Want to stop all the docker at ones </p> <p>Use this command</p> <pre><code>stop-all\n</code></pre>"},{"location":"MkDocs/ACS-commands.html#system","title":"System","text":"Update Uninstall and delete"},{"location":"MkDocs/ACS-commands.html#update","title":"Update","text":"<p>Want to update everything to the newest versions.</p> <p>Use this command</p> <pre><code>yt-update\n</code></pre>"},{"location":"MkDocs/ACS-commands.html#uninstall-and-delete","title":"Uninstall and delete","text":"<p>Want to uninstall everything and delete everything or uninstall and delete everything but keep the plex media folder.</p> <p>Use this command</p> <pre><code>yt-uninstall\n</code></pre>"},{"location":"MkDocs/ACS-errorcode.html","title":"Error Codes","text":""},{"location":"MkDocs/ACS-errorcode.html#youtube-dl-performence","title":"Youtube-dl Performence","text":"<p>Performence</p> <p>The Youtube-dl has some issues when it comes to downloading. Mainly because of long playlists and/or multiple downloads running at ones.</p> <p>This will result in these errors. (And possible more)</p> <ul> <li> <p>Can cause a softlog error on proxmox when running it in an VM.</p> </li> <li> <p>The longer the playlists the longer the download. (At download item 86 of 156 it takes 30 mins of 400mb of data, THIS is NOT a networking limit)</p> </li> <li> <p>Can cause a bit of slow down on plex itself if configured to update library on every change dectected in the folder.</p> </li> </ul> <p>Error Codes</p> <p>This is still under development.</p>"},{"location":"MkDocs/ACS-index.html","title":"ACS (Automated Content System)","text":""},{"location":"MkDocs/ACS-index.html#introduction","title":"Introduction","text":"<p>Important</p> <p>ACSF (Automated Content System Full)</p> <p>Redefining media server management, our user-friendly software combines a sleek interface with powerful automation. Ideal for users with robust servers, it effortlessly downloads movies, shows, and YouTube videos, while intuitively configuring and maintaining Plex, Ombi, Jackett, Sonarr, Radarr, Deluge, Tautulli, and Mikenye/YouTube-dl Docker containers. </p>"},{"location":"MkDocs/ACS-index.html#important","title":"Important","text":"<p>This software is still in development.</p> <p>Please report bugs to Github</p>"},{"location":"MkDocs/ACS-index.html#get-a-visual-breakdown-of-the-setup","title":"Get a visual breakdown of the setup.","text":""},{"location":"MkDocs/ACS-index.html#enjoy","title":"Enjoy","text":"<p>Enjoy the simplicity of organized folders and files, making setup and maintenance a breeze.</p> <p>Enjoy the simplicity of organized folders and files, making setup and maintenance a breeze. Elevate your media server experience with an innovative solution that seamlessly integrates ease of use with advanced capabilities.</p>"},{"location":"MkDocs/ACS-index.html#warnings","title":"Warnings","text":"<p>Root User Required</p> Docker is required Performence"},{"location":"MkDocs/ACS-index.html#root-user-required","title":"Root User Required","text":"<p>This software will only run as root. YOU CAN NOT RUN IT AS A NORMAL USER.</p>"},{"location":"MkDocs/ACS-index.html#docker-is-required","title":"Docker is required","text":"<p>Docker is required to run this software</p> <p>Get Docker on Debian 12</p> <p>Get Docker on Debian 11</p> <p>Get Docker on Ubuntu 20.04</p>"},{"location":"MkDocs/ACS-index.html#youtube-dl-performence","title":"Youtube-dl Performence","text":"<p>The Youtube-dl has some issues when it comes to downloading. Mainly because of long playlists and/or multiple downloads running at ones.</p> <p>This will result in these errors. (And possible more)</p> <ul> <li> <p>Can cause a softlog error on proxmox when running it in an VM.</p> </li> <li> <p>The longer the playlists the longer the download. (At download item 86 of 156 it takes 30 mins of 400mb of data, THIS is NOT a networking limit)</p> </li> <li> <p>Can cause a bit of slow down on plex itself if configured to update library on every change dectected in the folder.</p> </li> </ul>"},{"location":"MkDocs/ACS-install.html","title":"ACSF Installation","text":"<p>Automated Content System Full</p>"},{"location":"MkDocs/ACS-install.html#important-information","title":"Important Information","text":"<p>Root User Required</p> Important Docker is required"},{"location":"MkDocs/ACS-install.html#root-user-required","title":"Root User Required","text":"<p>This software will only run as root. YOU CAN NOT RUN IT AS A NORMAL USER.</p>"},{"location":"MkDocs/ACS-install.html#important","title":"Important","text":"<p>This software is still in development.</p> <p>Please report bugs to Github</p>"},{"location":"MkDocs/ACS-install.html#docker-is-required","title":"Docker is required","text":"<p>Docker is required to run this software</p> <p>Get Docker on Debian 12</p> <p>Get Docker on Debian 11</p> <p>Get Docker on Ubuntu 20.04</p>"},{"location":"MkDocs/ACS-install.html#install-command","title":"Install command","text":"Performence <p>Install ACSF</p>"},{"location":"MkDocs/ACS-install.html#youtube-dl-performence","title":"Youtube-dl Performence","text":"<p>The Youtube-dl has some issues when it comes to downloading. Mainly because of long playlists and/or multiple downloads running at ones.</p> <p>This will result in these errors. (And possible more)</p> <ul> <li> <p>Can cause a softlog error on proxmox when running it in an VM.</p> </li> <li> <p>The longer the playlists the longer the download. (At download item 86 of 156 it takes 30 mins of 400mb of data, THIS is NOT a networking limit)</p> </li> <li> <p>Can cause a bit of slow down on plex itself if configured to update library on every change dectected in the folder.</p> </li> </ul>"},{"location":"MkDocs/ACS-install.html#install-acsf","title":"Install ACSF","text":"<p>See the requirements</p> <p>Use this command</p> <pre><code>bash &lt;(wget -qO- https://raw.githubusercontent.com/RunesRepoHub/ACS/Production/setup.sh)\n</code></pre> <p>After the install has finished you can use these commands for quick access and control</p>"},{"location":"MkDocs/ACS-install.html#jackett-indexers-script","title":"Jackett Indexers Script","text":"From the Jackett page, click the \"add indexer\" button so that the pop up window with the full list of indexers appears."},{"location":"MkDocs/ACS-install.html#setup-jackett-indexers","title":"Setup jackett indexers","text":"<ul> <li>Go to your http://your-server-ip:9117</li> <li>Click on add indexer</li> </ul> <ul> <li>You'll then need to open your browser's development toolbar (in Chrome just hit F12) </li> <li>Go to the JavaScript Console and enter the following:</li> <li>And click \"CTRL+Enter\" to run the JavaScript</li> </ul> <pre><code>////hack to add all free indexers in Jackett\n$(document).ready(function () {\n    EnableAllUnconfiguredIndexersList();\n});\n\n\nfunction EnableAllUnconfiguredIndexersList() {\n    var UnconfiguredIndexersDialog = $($(\"#select-indexer\").html());\n\n    var indexersTemplate = Handlebars.compile($(\"#unconfigured-indexer-table\").html());\n    var indexersTable = $(indexersTemplate({ indexers: unconfiguredIndexers, total_unconfigured_indexers: unconfiguredIndexers.length  }));\n    indexersTable.find('.indexer-setup').each(function (i, btn) {\n        var indexer = unconfiguredIndexers[i];\n        $(btn).click(function () {\n            $('#select-indexer-modal').modal('hide').on('hidden.bs.modal', function (e) {\n                displayIndexerSetup(indexer.id, indexer.name, indexer.caps, indexer.link, indexer.alternativesitelinks, indexer.description);\n            });\n        });\n    });\n    indexersTable.find('.indexer-add').each(function (i, btn) {\n\n            $('#select-indexer-modal').modal('hide').on('hidden.bs.modal', function (e) {\n                var indexerId = $(btn).attr(\"data-id\");\n                api.getIndexerConfig(indexerId, function (data) {\n                    if (data.result !== undefined &amp;&amp; data.result == \"error\") {\n                        doNotify(\"Error: \" + data.error, \"danger\", \"glyphicon glyphicon-alert\");\n                        return;\n                    }\n                    api.updateIndexerConfig(indexerId, data, function (data) {\n                        if (data == undefined) {\n                            reloadIndexers();\n                            doNotify(\"Successfully configured \" + name, \"success\", \"glyphicon glyphicon-ok\");\n                        } else if (data.result == \"error\") {\n                            if (data.config) {\n                                populateConfigItems(configForm, data.config);\n                            }\n                            doNotify(\"Configuration failed: \" + data.error, \"danger\", \"glyphicon glyphicon-alert\");\n                        }\n                    }).fail(function (data) {\n                        if(data.responseJSON.error !== undefined) {\n                doNotify(\"An error occured while configuring this indexer&lt;br /&gt;&lt;b&gt;\" + data.responseJSON.error + \"&lt;/b&gt;&lt;br /&gt;&lt;i&gt;&lt;a href=\\\"https://github.com/Jackett/Jackett/issues/new?title=[\" + indexerId + \"] \" + data.responseJSON.error + \" (Config)\\\" target=\\\"_blank\\\"&gt;Click here to open an issue on GitHub for this indexer.&lt;/a&gt;&lt;i&gt;\", \"danger\", \"glyphicon glyphicon-alert\", false);\n            } else {\n                doNotify(\"An error occured while configuring this indexer, is Jackett server running ?\", \"danger\", \"glyphicon glyphicon-alert\");\n            }\n\n                    });\n                });\n            });\n\n    });\n    indexersTable.find(\"table\").DataTable(\n        {\n            \"stateSave\": true,\n            \"fnStateSaveParams\": function (oSettings, sValue) {\n                sValue.search.search = \"\"; // don't save the search filter content\n                return sValue;\n            },\n            \"bAutoWidth\": false,\n            \"pageLength\": -1,\n            \"lengthMenu\": [[10, 20, 50, 100, 250, 500, -1], [10, 20, 50, 100, 250, 500, \"All\"]],\n            \"order\": [[0, \"asc\"]],\n            \"columnDefs\": [\n                {\n                    \"name\": \"name\",\n                    \"targets\": 0,\n                    \"visible\": true,\n                    \"searchable\": true,\n                    \"orderable\": true\n                },\n                {\n                    \"name\": \"description\",\n                    \"targets\": 1,\n                    \"visible\": true,\n                    \"searchable\": true,\n                    \"orderable\": true\n                },\n                {\n                    \"name\": \"type\",\n                    \"targets\": 2,\n                    \"visible\": true,\n                    \"searchable\": true,\n                    \"orderable\": true\n                },\n                {\n                    \"name\": \"type_string\",\n                    \"targets\": 3,\n                    \"visible\": false,\n                    \"searchable\": true,\n                    \"orderable\": true,\n                },\n                {\n                    \"name\": \"language\",\n                    \"targets\": 4,\n                    \"visible\": true,\n                    \"searchable\": true,\n                    \"orderable\": true\n                },\n                {\n                    \"name\": \"buttons\",\n                    \"targets\": 5,\n                    \"visible\": true,\n                    \"searchable\" : false,\n                    \"orderable\": false\n                }\n            ]\n        });\n\n    var undefindexers = UnconfiguredIndexersDialog.find('#unconfigured-indexers');\n    undefindexers.append(indexersTable);\n\n    UnconfiguredIndexersDialog.on('shown.bs.modal', function() {\n        $(this).find('div.dataTables_filter input').focusWithoutScrolling();\n    });\n\n    UnconfiguredIndexersDialog.on('hidden.bs.modal', function (e) {\n        $('#indexers div.dataTables_filter input').focusWithoutScrolling();\n    });\n\n    $(\"#modals\").append(UnconfiguredIndexersDialog);\n\n    UnconfiguredIndexersDialog.modal(\"show\");\n}\n</code></pre>"},{"location":"MkDocs/ACS-install.html#configure-deluge","title":"Configure Deluge","text":"Deluge"},{"location":"MkDocs/ACS-install.html#setting-up-deluge","title":"Setting up deluge","text":"<ul> <li>Go to your http://your-server-ip:8112</li> <li>Go to preferences </li> <li>Downloads tab</li> <li>Set download to /downloads</li> <li>Set download completed to /downloads/completed</li> </ul> <ul> <li>Go to plugins</li> <li>Enable Label</li> <li>Press apply</li> </ul>"},{"location":"MkDocs/ACS-install.html#configure-sonarr-and-radarr","title":"Configure Sonarr and Radarr","text":"Indexers Download Client Episode Naming Download profile"},{"location":"MkDocs/ACS-install.html#setting-up-indexers-on-sonarr-and-radarr","title":"Setting up indexers on sonarr and radarr","text":"<p>Port 8989 for sonarr</p> <p>Port 7878 for radarr</p> <ul> <li>Go to your http://your-server-ip:8989</li> <li>Go to settings </li> <li>Indexers</li> </ul> <p> </p> <p>All indexers is just another name of jackett</p> <p></p> <p>Access your jackett docker container and find your own information</p> <ul> <li>Go to your http://your-server-ip:9117</li> <li>Get the api key </li> <li>Then copy the \"Torznab Feed\" from the torrent indexer you want to use.</li> </ul> <p>Follow the steps below</p> <ul> <li>Then click the plus to add a new one</li> <li>Fill in the name of the indexer</li> <li>Fill in the url of the indexer</li> <li>Fill in the api key of the indexer</li> </ul> <p> </p> <p>I recommend that you use advanced settings while setting up the indexers.</p> <ul> <li>Because all the yellow fields are \"advanced settings\"</li> <li>And one of them allow your to setup minimal amount of seeds before downloading</li> </ul> <p>I used 10 seeds for sonarr and 15 seeds for radarr</p>"},{"location":"MkDocs/ACS-install.html#adding-the-deluge-download-client","title":"Adding the deluge download client.","text":"<ul> <li>Then click the plus to add a new one</li> </ul> <ul> <li>Fill in the name of the client (Deluge)</li> <li>Fill in the ip of the client</li> <li>Fill in the port of the client (Default: 8112)</li> <li>Fill in the password of the client (Deluge)</li> </ul> <p>This might be need on radarr</p> <p></p>"},{"location":"MkDocs/ACS-install.html#episode-naming","title":"Episode Naming","text":"<p>Enable renaming of the episode.</p> <ul> <li>Then click the add root folder button</li> <li>Find the respective folder and click on it (Sonarr = shows, Radarr = movies)</li> </ul> <p> </p> <ul> <li>You can change the name convention of the episode here (Optional)</li> </ul>"},{"location":"MkDocs/ACS-install.html#download-profile","title":"Download profile","text":"<p>I like to make my own download profiles.</p> <ul> <li>Remove all default</li> <li>Add a standard profile for 720p</li> <li>Add a standard profile for 1080p</li> </ul> <p>I have added both to one to show which I would \"mark\"</p> <p>You should make one for each</p> <p> </p>"},{"location":"MkDocs/ACS-install.html#configure-ombi","title":"Configure Ombi","text":"Ombi setup"},{"location":"MkDocs/ACS-install.html#ombi-setup","title":"Ombi setup","text":""},{"location":"MkDocs/ACS-install.html#load-plex-server","title":"Load Plex Server","text":"<ul> <li>Go to settings </li> <li>Media Server</li> <li>Login into plex</li> <li>Load your servers</li> <li>And then submit/save</li> </ul>"},{"location":"MkDocs/ACS-install.html#load-radarr-server","title":"Load Radarr Server","text":"<ul> <li>Go to the http://your-server-ip:3579</li> <li>Go to settings </li> <li>Movies</li> <li>Enable it at the top </li> <li>Enable \"Scan for Availability\"</li> <li>Enable \"Add the user as a tag\"</li> <li>Add the ip of the server</li> <li>Add the port of the server. (default: 7878)</li> <li>Load and set quality profiles</li> <li>Load and set the default root folder</li> <li>Load language profiles</li> <li>Load Default minimum availability (Physical/Web)</li> </ul>"},{"location":"MkDocs/ACS-install.html#get-your-radarr-api-key","title":"Get your Radarr api key","text":"<ul> <li>Go to settings</li> <li>General</li> <li>Under security</li> <li>Find your api key </li> </ul> <p>Then Save/Submit</p> <p></p> <p></p>"},{"location":"MkDocs/ACS-install.html#load-sonarr-server","title":"Load Sonarr Server","text":"<ul> <li>Go to the http://your-server-ip:3579</li> <li>Go to settings </li> <li>TV</li> <li>Enable it at the top </li> <li>Enable \"Scan for Availability\"</li> <li>Enable \"Add the user as a tag\"</li> <li>Add the ip of the server</li> <li>Add the port of the server. (default: 8989)</li> <li>Load and set quality profiles</li> <li>Load and set the default root folder</li> <li>Load language profiles</li> </ul>"},{"location":"MkDocs/ACS-install.html#get-your-sonarr-api-key","title":"Get your Sonarr api key","text":"<ul> <li>Go to settings</li> <li>General</li> <li>Under security</li> <li>Find your api key</li> </ul> <p>Then Save/Submit</p> <p></p> <p></p>"},{"location":"MkDocs/ACS-install.html#configure-tautulli","title":"Configure Tautulli","text":"Tautulli setup"},{"location":"MkDocs/ACS-install.html#tautulli-setup","title":"Tautulli setup","text":"<ul> <li>Go to the http://your-server-ip:8181 </li> <li>Click on \"Next\"</li> <li>Sign in with plex  </li> <li>Click on \"Next\"</li> <li>Pick the plex server you want to use</li> <li>Input the plex port </li> <li>Click on \"Next\"</li> <li>Activity Logging </li> <li>Just set the \"ignore interval\" to 120</li> <li>Click on \"Next\"</li> <li>Notifications </li> <li>Click on \"Next\"</li> <li>Database import </li> <li>Click on \"Finish\"  </li> </ul>"},{"location":"MkDocs/ACS-requirement.html","title":"Requirements ACSF","text":""},{"location":"MkDocs/ACS-requirement.html#automated-content-system-full","title":"Automated Content System Full","text":""},{"location":"MkDocs/ACS-requirement.html#supported-platforms","title":"Supported Platforms","text":""},{"location":"MkDocs/ACS-requirement.html#made-with","title":"Made With","text":""},{"location":"MkDocs/ACS-requirement.html#youtube-dl-performence","title":"Youtube-dl Performence","text":"<p>Performence</p> <p>The Youtube-dl has some issues when it comes to downloading. Mainly because of long playlists and/or multiple downloads running at ones.</p> <p>This will result in these errors. (And possible more)</p> <ul> <li> <p>Can cause a softlog error on proxmox when running it in an VM.</p> </li> <li> <p>The longer the playlists the longer the download. (At download item 86 of 156 it takes 30 mins of 400mb of data, THIS is NOT a networking limit)</p> </li> <li> <p>Can cause a bit of slow down on plex itself if configured to update library on every change dectected in the folder.</p> </li> </ul>"},{"location":"MkDocs/ACS-requirement.html#requriements","title":"Requriements","text":"<p>Requirements</p> <p>OS Supported:</p> <ul> <li>Debian 12 CLI \"Server\"(Tested) </li> <li>Debian 11 CLI \"Server\"(Tested)</li> <li>Ubuntu 22.04 Server (Tested - Requires user modification to run)</li> <li>Zorin 16.3 Core (Tested - Requires user modification to run) </li> <li>Kali Linux 2023.3 (Tested - Requires user modification to run)</li> </ul> <p>Root was installed on all tested OS and is required</p> <p>User</p> <ul> <li>Username: root (NOT OPTIONAL)</li> <li>Set new password for the root user</li> <li>Enable SSH for root (Optional used for remote access)</li> <li>Change to the root user with <code>su - root</code></li> </ul> <p>Docker</p> <ul> <li>Install Docker + Docker-cli on the server.</li> </ul> <p>Server</p> <ul> <li>Need to have ~/.bashrc for custom commands</li> <li>Need to have bash installed</li> <li>Need to have a working internet connection</li> <li>Need to be a Debian based server</li> <li>Need to be up to date with the OS (apt-get update + apt-get upgrade)</li> <li>Should have a FTP/SFTP on the server. (Optional)</li> </ul> <p>Hardware</p> <ul> <li>CPU : 4 cores</li> <li>Memory : 8GB</li> <li>Hard Disk : 100GB</li> </ul> <p>Youbtube-dl</p> <p>Recommended</p> <ul> <li>Use 3 youtube-dl containers with 8gb of RAM for each server.</li> <li>Use 5 youtube-dl containers with 16gb of RAM for each server.</li> </ul>"},{"location":"MkDocs/ACS-source.html","title":"Source Code Description","text":"<p>Get a better understanding of the source code by reading below.</p> <p></p>"},{"location":"MkDocs/ACS-source.html#system","title":"System.","text":"Setup.sh Setup-plex.sh"},{"location":"MkDocs/ACS-source.html#setupsh","title":"Setup.sh","text":"<p>This script streamlines the setup of the Auto-YT-DL application with a comprehensive set of actions. It defines color variables for terminal output, sets the app version, and ensures a clean environment. Checking for necessary dependencies like Docker, sudo, and curl, the script installs and configures them as needed. </p> <p>It downloads Docker images, shell scripts from GitHub, and establishes essential folders with proper permissions. User interaction is facilitated through prompts for configuration settings, including the maximum number of containers for YouTube downloading. </p> <p>The script automates Plex setup, adds aliases and cron jobs, and concludes with a user-friendly completion message and instructions for utilizing custom commands. This user interface-centric approach enhances both functionality and ease of maintenance.</p>"},{"location":"MkDocs/ACS-source.html#setup-plexsh","title":"Setup-plex.sh","text":"<p>This script orchestrates the setup and configuration of various Docker services, ensuring a streamlined and automated deployment. Key functionalities include:</p> <ol> <li> <p>Environment Configuration:</p> <ul> <li>Sets IP address and time zone variables.</li> </ul> </li> <li> <p>Docker Network Management:</p> <ul> <li>Checks for the existence of the \"my_plex_network\" Docker network and creates it if absent.</li> </ul> </li> <li> <p>Plex Service Setup:</p> <ul> <li> <p>Checks if a Docker container named \"plex\" is running and skips Plex claim if it is.</p> </li> <li> <p>Prompts the user for the Plex claim if the container is not running.</p> </li> <li> <p>Utilizes the plexinc/pms-docker image to run the Plex service.</p> </li> </ul> </li> <li> <p>Other Docker Services:</p> <ul> <li> <p>Deploys several services (jackett, radarr, sonarr, tautulli, deluge, ombi) using Docker containers.</p> </li> <li> <p>Configures each service with specific settings, volumes, and network configurations.</p> </li> <li> <p>Sets services to restart always, ensuring automatic startup upon system restart.</p> </li> </ul> </li> </ol> <p>This comprehensive script not only establishes a functional media server environment but also ensures the resilience of services through automatic restart configurations. The user interaction for Plex claim adds a layer of customization to suit individual preferences. </p>"},{"location":"MkDocs/ACS-source.html#user-interaction","title":"User interaction.","text":"Download.sh Uninstall.sh Update.sh Add-url-list.sh Docker-stop.sh Stop-remove.sh"},{"location":"MkDocs/ACS-source.html#downloadsh","title":"Download.sh","text":"<p>The script efficiently manages the mikenye/youtube-dl Docker image, first checking for its presence and displaying a corresponding message if it exists. If the image is not already downloaded, the script utilizes the \"docker pull\" command to fetch the mikenye/youtube-dl Docker image. </p> <p>A confirmation message is then displayed, informing the user that the image has been successfully downloaded. This ensures that the latest version of the image is readily available for use in the Auto-YT-DL application, enhancing the script's functionality and user communication.</p>"},{"location":"MkDocs/ACS-source.html#uninstallsh","title":"Uninstall.sh","text":"<p>This user-interactive script facilitates the management of the Plex media folder based on user preferences. After prompting the user to choose between keeping or deleting the Plex media folder, the script dynamically adjusts its actions accordingly:</p> <ol> <li> <p>Keep Plex Media Folder Option:</p> <ul> <li> <p>Stops and removes Docker containers with the mikenye/youtube-dl image.</p> </li> <li> <p>Stops and removes Docker containers for jackett, radarr, sonarr, tautulli, deluge, and ombi.</p> </li> <li> <p>Removes the my_plex_network Docker network.</p> </li> <li> <p>Clears all folders and files associated with the Auto-YT-DL application except for the Plex media folder.</p> </li> <li> <p>Removes the line from the crontab file that runs the automated-check.sh script.</p> </li> </ul> </li> <li> <p>Delete Plex Media Folder Option (In addition to the above):</p> <ul> <li>Removes the Plex media folder.</li> </ul> </li> <li> <p>Invalid Response Handling:</p> <ul> <li>Displays an error message for invalid responses, guiding the user to provide a valid input.</li> </ul> </li> </ol> <p>This modular and responsive design ensures that the script caters to user preferences while maintaining clarity and control over the automated cleanup process.</p>"},{"location":"MkDocs/ACS-source.html#updatesh","title":"Update.sh","text":"<p>This script enhances maintainability and functionality through the following steps:</p> <ol> <li> <p>Environment Configuration:</p> <ul> <li>Sets the \"Dev\" variable to \"Production\" and exports it as an environment variable.</li> </ul> </li> <li> <p>Updating \"download-update.sh\" Script:</p> <ul> <li> <p>Removes the existing \"download-update.sh\" file.</p> </li> <li> <p>Downloads the latest version from a GitHub repository, dynamically selecting the version based on the value of the \"Dev\" variable.</p> </li> </ul> </li> <li> <p>User Notification:</p> <ul> <li>Displays a message notifying the user that the \"download-update.sh\" script has been updated.</li> </ul> </li> <li> <p>Executing Updated Script:</p> <ul> <li>Runs the updated \"download-update.sh\" script using the \"bash\" command.</li> </ul> </li> </ol> <p>This sequence of actions ensures that the script is always utilizing the latest version of the \"download-update.sh\" script from the specified GitHub repository, enhancing efficiency and adaptability in response to potential updates or changes.</p>"},{"location":"MkDocs/ACS-source.html#add-url-listsh","title":"Add-url-list.sh","text":"<p>This script facilitates the management of YouTube playlist URLs with user interaction and file handling. The process unfolds as follows:</p> <ol> <li> <p>User Interaction:</p> <ul> <li>Displays a message instructing the user to enter YouTube playlist URLs, prompting them to separate URLs with spaces.</li> </ul> </li> <li> <p>File Checks and Creation:</p> <ul> <li> <p>Checks if \"url_file.txt\" and \"archive_url_file.txt\" exist in the \"~/plex/media\" directory.</p> </li> <li> <p>Creates these files if they do not exist.</p> </li> </ul> </li> <li> <p>Reading Existing URLs:</p> <ul> <li>Reads existing URLs from the \"url_file.txt\" file.</li> </ul> </li> <li> <p>User Input Processing:</p> <ul> <li>Loops over each URL entered by the user.</li> </ul> </li> <li> <p>URL Validation:</p> <ul> <li> <p>Checks if the URL already exists in the \"url_file.txt\" file using the grep command.</p> </li> <li> <p>If the URL already exists, prompts the user to input another link and calls the \"add-url-list.sh\" script.</p> </li> </ul> </li> <li> <p>URL Handling:</p> <ul> <li> <p>If the URL does not exist, appends the new URL to both \"url_file.txt\" and \"archive_url_file.txt\" files.</p> </li> <li> <p>Calls the \"download.sh\" script.</p> </li> </ul> </li> </ol> <p>This script provides a user-friendly way to manage and download YouTube playlist URLs, preventing duplicates and maintaining a record of URLs for future reference in the \"archive_url_file.txt\" file.</p>"},{"location":"MkDocs/ACS-source.html#docker-stopsh","title":"Docker-stop.sh","text":"<p>This script efficiently stops all containers running the \"mikenye/youtube-dl\" image with the following steps:</p> <ol> <li> <p>User Notification:</p> <ul> <li>Displays a message indicating that it is stopping all \"mikenye/youtube-dl\" containers.</li> </ul> </li> <li> <p>Retrieving Container IDs:</p> <ul> <li>Uses the docker ps command with appropriate filters to retrieve the IDs of containers running the \"mikenye/youtube-dl\" image.</li> </ul> </li> <li> <p>Container Stopping:</p> <ul> <li> <p>Iterates over each container ID.</p> </li> <li> <p>Sends a stop command to each container using the docker stop command.</p> </li> </ul> </li> </ol> <p>This systematic approach ensures the graceful termination of all containers associated with the \"mikenye/youtube-dl\" image, facilitating efficient management and control.</p>"},{"location":"MkDocs/ACS-source.html#stop-removeshell","title":"Stop-remove.shell","text":"<p>This script orchestrates the efficient shutdown and removal of specified Docker containers and networks. The process unfolds as follows:</p> <ol> <li> <p>Stopping and Removing \"mikenye/youtube-dl\" Containers:</p> <ul> <li> <p>Iterates over container IDs running the \"mikenye/youtube-dl\" image.</p> </li> <li> <p>Sends a stop command to each container using the docker stop command.</p> </li> <li> <p>Removes each container using the docker rm command.</p> </li> <li> <p>Displays a message confirming the successful stopping and removal of all \"mikenye/youtube-dl\" containers.</p> </li> </ul> </li> <li> <p>Stopping and Removing Other Containers:</p> <ul> <li> <p>Stops and removes Docker containers for plex, jackett, radarr, sonarr, tautulli, deluge, and ombi.</p> </li> <li> <p>Displays a message indicating the successful stopping and removal of these specified containers.</p> </li> </ul> </li> <li> <p>Removing Docker Network:</p> <ul> <li> <p>Removes the Docker network \"my_plex_network\" using the docker network rm command.</p> </li> <li> <p>Displays a message indicating the successful removal of the network.</p> </li> </ul> </li> </ol> <p>This script provides a systematic and user-friendly approach to shutting down and cleaning up Docker containers and networks associated with specified images, enhancing the manageability and reliability of the environment.</p>"},{"location":"MkDocs/Setup-Checkmk.html","title":"Setup a Checkmk docker","text":""},{"location":"MkDocs/Setup-Checkmk.html#set-up-instructions","title":"Set up instructions:","text":"<p>Follow the setup these instructions to configure the system.</p> <p>User Input for Docker Image</p> <ul> <li>Prompts the user to input the Docker image for CheckMK. If the user doesn't provide any input, it defaults to \"checkmk/check-mk-raw:latest.\"</li> </ul> <p>User Input for Container Name</p> <ul> <li>Prompts the user to input the name for the CheckMK container. If no input is provided, it defaults to \"checkmk-container.\"</li> </ul> <p>User Input for Exposed Port</p> <ul> <li>Prompts the user to input the port on which CheckMK should be exposed. Defaults to port 8080 if no input is provided.</li> </ul> <p>User Input for Data Path</p> <ul> <li>Prompts the user to input the path for CheckMK data. Defaults to \"./Data/checkmk-data\" if no input is provided.</li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#docker-compose-file-generation","title":"Docker Compose File Generation","text":"<p>Docker Compose File Generation</p> <ul> <li> <p>Defines a subfolder for Docker compose files and creates it if it doesn't exist.</p> </li> <li> <p>Generates a Docker compose file based on user inputs, specifying the CheckMK image, exposed port, and data volume.</p> </li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#inform-user","title":"Inform User","text":"<p>Inform User</p> <ul> <li>Informs the user about the location of the created Docker compose file.</li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#check-docker-status","title":"Check Docker Status","text":"<p>Check Docker Status</p> <ul> <li>Checks if Docker is running, and if not, prompts the user to start Docker and rerun the script. The method of checking depends on the Linux distribution.</li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#start-docker-container","title":"Start Docker Container","text":"<p>Start Docker Container</p> <ul> <li>Uses docker-compose to start the CheckMK container in detached mode (-d). It uses sudo if the OS is Ubuntu, Zorin, Linux Mint, or Kali.</li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#check-container-start-status","title":"Check Container Start Status","text":"<p>Check Container Start Status</p> <ul> <li>Checks if the Docker container has started successfully. If successful, it displays a success message with the container's name and login details. If not, it shows an error message and exits with an error code.</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html","title":"Setup a Cloudflare Tunnel Docker","text":""},{"location":"MkDocs/Setup-Cloudflare.html#set-up-instructions","title":"Set up instructions","text":"<p>Follow the setup these instructions to configure the system.</p>"},{"location":"MkDocs/Setup-Cloudflare.html#detecting-os-and-setting-sudo","title":"Detecting OS and Setting Sudo","text":"<p>Detecting OS and Setting Sudo</p> <ul> <li>The script starts by determining the operating system to adjust command prefixes accordingly. If the OS is Ubuntu, Kali, Linux Mint, or Zorin, it sets USE_SUDO to \"sudo\".</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#creating-appdata-directory-and-setting-permissions","title":"Creating Appdata Directory and Setting Permissions","text":"<p>Creating Appdata Directory and Setting Permissions</p> <ul> <li>A directory, /mnt/user/appdata/cloudflared/, is created, and its permissions are set to 777. This directory seems to be a storage location for Cloudflared configurations.</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#running-cloudflare-tunnel-login-command","title":"Running Cloudflare Tunnel Login Command","text":"<p>Running Cloudflare Tunnel Login Command</p> <ul> <li>The script runs a Docker command to log in to the Cloudflare Tunnel, interacting with the /mnt/user/appdata/cloudflared/ directory.</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#creating-a-cloudflare-tunnel","title":"Creating a Cloudflare Tunnel","text":"<p>Creating a Cloudflare Tunnel</p> <ul> <li>Another Docker command is used to create a Cloudflare tunnel. The configuration is stored in the same directory, and the tunnel is named based on user input.</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#configuring-cloudflare-tunnel-for-websites","title":"Configuring Cloudflare Tunnel for Website(s)","text":"<p>Configuring Cloudflare Tunnel for Website(s)</p> <ul> <li> <p>The script prompts the user for information about the website(s) they want to host via the Cloudflare Tunnel. It asks for the number of sites, tunnel UUID, protocol (http/https), reverse proxy IP, port, and domain.</p> </li> <li> <p>Based on the number of sites, it generates a configuration file (config.yml) in the /mnt/user/appdata/cloudflared/ directory.</p> </li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#starting-the-cloudflare-tunnel","title":"Starting the Cloudflare Tunnel","text":"<p>Starting the Cloudflare Tunnel</p> <ul> <li> <p>The script concludes by starting the Cloudflare tunnel in detached mode, utilizing the configuration provided by the user.</p> </li> <li> <p>Additionally, for cases where the user wants to host multiple sites, the script uses dialog to display a message box instructing them to manually configure the generated config.yml file for additional sites.</p> </li> </ul>"},{"location":"MkDocs/Setup-Deluge.html","title":"Setup a Deluge Docker","text":""},{"location":"MkDocs/Setup-Deluge.html#set-up-instructions","title":"Set up instructions","text":"<p>Follow the setup these instructions to configure the system.</p> <p>Docker Image</p> <ul> <li>The script prompts the user to input the Docker image for Deluge. If no input is provided, it defaults to \"lscr.io/linuxserver/deluge:latest\".</li> </ul> <p>Container Name</p> <ul> <li>The user is asked to enter a name for the Docker container. If no input is given, it defaults to \"deluge-container\".</li> </ul> <p>Folders</p> <ul> <li>The script requests the Deluge root folder and download folder. If skipped, default settings (./Data/config for Deluge root folder and ./Data/downloads for the download folder) are used.</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#docker-compose-file-generation","title":"Docker Compose File Generation","text":"<p>Docker Compose Generation</p> <ul> <li>It sets up a subfolder for Docker Compose files (./RRHQD-Dockers/Deluge) and creates a Docker Compose file (docker-compose-$CONTAINER_NAME.yml).</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#docker-compose-file-content","title":"Docker Compose File Content","text":"<p>Docker Compose Content</p> <ul> <li>The content is generated dynamically using a heredoc. It includes specifications for the Docker Compose version, Deluge service settings (image, container name, network mode, environment variables, volume mappings, ports, and restart policy).</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#folder-creation","title":"Folder Creation","text":"<p>Folder Creation</p> <ul> <li>The script ensures the existence of the subfolder for Docker Compose files, creating it if necessary.</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#inform-user-and-start-container","title":"Inform User and Start Container","text":"<p>Inform User and Start Container</p> <ul> <li>The user is informed that the Docker Compose file for Deluge has been created. The script attempts to start the Deluge container using docker compose -f $COMPOSE_FILE up -d.</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#check-container-status","title":"Check Container Status","text":"<p>Check Container Status</p> <ul> <li>After the attempt to start the container, it checks if the Docker container has started successfully by querying Docker for the container's ID.</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#user-notification","title":"User Notification","text":"<p>User Notification</p> <ul> <li>If the container started successfully, a success message is displayed using dialog. Otherwise, an error message is shown, and the script exits with an error code.</li> </ul>"},{"location":"MkDocs/Setup-Linkwarden.html","title":"Setup a Linkwarden docker","text":""},{"location":"MkDocs/Setup-Linkwarden.html#set-up-instructions","title":"Set up instructions","text":"<p>Follow the setup these instructions to configure the system.</p>"},{"location":"MkDocs/Setup-Linkwarden.html#setting-environment-variables","title":"Setting Environment Variables","text":"<p>Setting Environment Variables</p> <p>You'll be asked to provide three pieces of information:</p> <ul> <li> <p>NEXTAUTH_SECRET: A secret key for authentication.</p> </li> <li> <p>NEXTAUTH_URL: The URL for authentication requests.</p> </li> <li> <p>POSTGRES_PASSWORD: Password for the PostgreSQL database.</p> </li> </ul> <pre><code>Enter the NEXTAUTH_SECRET (it should look like ^7yTjn@G$j@KtLh9&amp;@UdMpdfDZ):\nEnter the NEXTAUTH_URL (it should look like 'http://localhost:3000/api/v1/auth'):\nEnter the POSTGRES_PASSWORD:\n</code></pre>"},{"location":"MkDocs/Setup-Linkwarden.html#validation","title":"Validation","text":"<p>Validation</p> <ul> <li>Make sure not to leave any field empty; otherwise, an error will be displayed.</li> </ul> <pre><code>NEXTAUTH_SECRET is empty. Please enter a valid secret.\n</code></pre>"},{"location":"MkDocs/Setup-Linkwarden.html#write-to-env-file","title":"Write to .env File","text":"<p>Write to .env File</p> <ul> <li>If all values are provided, they will be stored in a .env file.</li> </ul> <pre><code>NEXTAUTH_SECRET=&lt;your_secret&gt;\nNEXTAUTH_URL=&lt;your_url&gt;\nPOSTGRES_PASSWORD=&lt;your_password&gt;\n</code></pre>"},{"location":"MkDocs/Setup-Linkwarden.html#run-docker-compose","title":"Run Docker Compose","text":"<p>Run Docker Compose</p> <ul> <li>The setup initiates Docker Compose to start the container in the background.</li> </ul> <pre><code>docker compose up -d\n</code></pre>"},{"location":"MkDocs/Setup-Linkwarden.html#check-container-status","title":"Check Container Status","text":"<p>Check Container Status</p> <ul> <li>After starting, it checks if the Docker container is running successfully. bash</li> </ul> <pre><code>The Docker container ghcr.io/linkwarden/linkwarden:latest has started successfully.\n</code></pre> <ul> <li>If there's an issue, an error message will advise you to check the logs for more details. sql</li> </ul> <pre><code>Failed to start the Docker container ghcr.io/linkwarden/linkwarden:latest. Please check the logs for details.\n</code></pre>"},{"location":"Readme/Cronjobs.html","title":"Cronjobs","text":"## Cronjobs  ![Alt text](../Images/Cronjobs.png)   <p>[!NOTE] - Add a nightly reboot at 4:45 am - Daily midnight update (Debian Systems) - Add a reboot cronjob for every Sunday at 00:00 am - Cronjob Manager - Easy and quick custom cronjob - Cronmointer - Easy WebGUI Interface to keep track of cronjobs - Add Webp Converter to run every 20 minutes - Add Youtube Short Cleanup to run every 20 minutes</p>   ## Help and Guidance   [  Requirements  ][Link1]  [  Installation  ][Link2]  [  Main Menu  ][Link3]  [  Docker Support  ][Link4]  [  RunesRepoHub Software  ][Link5]  [  Cronjobs  ][Link6]  [  Youtube Scripts  ][Link7]  [  Quick Installers  ][Link8]  [  Quick Tools  ][Link9]  [  Docker-CnC  ][Link10]  ---------------------------------------------------------------------------------------------   [Link1]: docs/Readme/Requirements.md [Link2]: docs/Readme/Installation.md [Link3]: docs/Readme/Main-Menu.md [Link4]: docs/Readme/Docker-Support.md [Link5]: docs/Readme/RunesRepoHub.md [Link6]: docs/Readme/Cronjobs.md [Link7]: docs/Readme/Youtube-Scripts.md [Link8]: docs/Readme/Quick-Installer.md [Link9]: docs/Readme/Quick-Tools.md [Link10]: docs/Readme/Docker-CnC.md"},{"location":"Readme/Docker-CnC.html","title":"Docker CnC","text":"## Docker Command and Control  ![Alt text](../Images/Docker-CnC.png)   <p>[!NOTE] - Docker - Cleanup (Clean all unused images, volumes and networks) - Docker - Remove (Stop and Delete a Docker) - Docker - Reset (Reset Docker - Delete everything) - Docker - Start (Start one or more Dockers) - Docker - Stop (Stop one or more Dockers) - Docker - Update (Update a Docker)</p>   ---------------------------------------------------------------------------------------------  ## Help and Guidance   [  Requirements  ][Link1]  [  Installation  ][Link2]  [  Main Menu  ][Link3]  [  Docker Support  ][Link4]  [  RunesRepoHub Software  ][Link5]  [  Cronjobs  ][Link6]  [  Youtube Scripts  ][Link7]  [  Quick Installers  ][Link8]  [  Quick Tools  ][Link9]  [  Docker-CnC  ][Link10]  ---------------------------------------------------------------------------------------------   [Link1]: docs/Readme/Requirements.md [Link2]: docs/Readme/Installation.md [Link3]: docs/Readme/Main-Menu.md [Link4]: docs/Readme/Docker-Support.md [Link5]: docs/Readme/RunesRepoHub.md [Link6]: docs/Readme/Cronjobs.md [Link7]: docs/Readme/Youtube-Scripts.md [Link8]: docs/Readme/Quick-Installer.md [Link9]: docs/Readme/Quick-Tools.md [Link10]: docs/Readme/Docker-CnC.md"},{"location":"Readme/Docker-Support.html","title":"Docker Support","text":"## Docker Support  ![Alt text](../Images/Docker-Images.png)  **Every docker \"Installer\" has been tested and is working.**   <p>[!IMPORTANT] Pay attention to:</p> <ul> <li>If the input can be skipped or not. (Else the docker might not work)</li> <li>All dockers are in the \"RRHQD-Dockers\" folder. </li> <li>All dockers are made using docker compose files.</li> <li>All docker compose files are located in \"RRHQD-Dockers\"</li> </ul>   ### Docker images currently supported   <p>[!NOTE] - Uptime-Kuma - A fancy self-hosted monitoring tool - Vaultwarden - An unofficial Bitwarden compatible server - Cloudflare Tunnel - Securely connect your network to the Internet - MediaCMS - A modern, fully featured open source video and media CMS (Not supported, due to unstable scripts, working on fix) - CheckMK - A unified monitoring and alerting system - MySQL - The world's most popular open source database - NTFY - A simple and powerful notification service - Postgres - The world's most popular open source database - N8N - A workflow automation platform - llama-GPT - A modern, open source chat bot. - Portainer - A web management interface for Docker - Deluge - A lightweight torrent client - Ghost - A simple, powerful, and open source content management system - Radarr - A self-hosted media server download manager and torrent tracker for movies - Sonarr - A self-hosted media server download manager and torrent tracker for shows - Ombi - A self-hosted reqests and media management system - It-tools - A collection of tools for IT professionals - Linkwarden - A self-hosted url manager - Memos - A self-hosted twitter-ish service - Jackett - A self-hosted torrent tracker</p>   ---------------------------------------------------------------------------------------------  ## Help and Guidance   [  Requirements  ][Link1]  [  Installation  ][Link2]  [  Main Menu  ][Link3]  [  Docker Support  ][Link4]  [  RunesRepoHub Software  ][Link5]  [  Cronjobs  ][Link6]  [  Youtube Scripts  ][Link7]  [  Quick Installers  ][Link8]  [  Quick Tools  ][Link9]  [  Docker-CnC  ][Link10]  ---------------------------------------------------------------------------------------------   [Link1]: docs/Readme/Requirements.md [Link2]: docs/Readme/Installation.md [Link3]: docs/Readme/Main-Menu.md [Link4]: docs/Readme/Docker-Support.md [Link5]: docs/Readme/RunesRepoHub.md [Link6]: docs/Readme/Cronjobs.md [Link7]: docs/Readme/Youtube-Scripts.md [Link8]: docs/Readme/Quick-Installer.md [Link9]: docs/Readme/Quick-Tools.md [Link10]: docs/Readme/Docker-CnC.md"},{"location":"Readme/Installation.html","title":"Installation","text":"# How to use  ## Dependencies folders   <p>[!WARNING] * RRHQD * RRHQD-Dockers</p> <p>Note: The Docker compose files and the docker volumes are stored in the \"RRHQD-Dockers\" folder (SO DONT DELETE IT, unless you know what you are doing). The \"RRHQD\" folder is the main folder for the script.</p> <p>[!TIP] - Run the setup via the command below.</p> <ul> <li> <p>Follow the setup \"guide\" after.</p> </li> <li> <p>When asked what branch do you want to use, select the branch you want to use. If you want to use a stable branch, select \"Prod\".</p> </li> <li> <p>If you want to the nightly updated code base, then use the \"PoC\" branch.</p> </li> </ul> <p>[!CAUTION] Don't use the Dev branch</p>   ## Setup Command  <pre><code>bash &lt;(wget -qO- https://raw.githubusercontent.com/RunesRepoHub/RRHQD/Prod/Setup.sh)\n</code></pre>   ## Custom Commands     &gt; [!NOTE] &gt;To use custom commands you will have to run   &gt; [!WARNING] &gt;***This is for Ubuntu, Debian, Zorin OS and Linux Mint.***  <pre><code>source ~/.bashrc\n</code></pre>  &gt; [!WARNING] &gt;***This is for Kali Linux***  <pre><code>source ~/.zshrc\n</code></pre>  --------------------------------------------------------------------  &gt; [!TIP] &gt;If you want to access the script again after exiting it use the command below.  <pre><code>qd\n</code></pre>  ---------------------------------------------------------------------------------------------  ## Help and Guidance   [  Requirements  ][Link1]  [  Installation  ][Link2]  [  Main Menu  ][Link3]  [  Docker Support  ][Link4]  [  RunesRepoHub Software  ][Link5]  [  Cronjobs  ][Link6]  [  Youtube Scripts  ][Link7]  [  Quick Installers  ][Link8]  [  Quick Tools  ][Link9]  [  Docker-CnC  ][Link10]  ---------------------------------------------------------------------------------------------   [Link1]: docs/Readme/Requirements.md [Link2]: docs/Readme/Installation.md [Link3]: docs/Readme/Main-Menu.md [Link4]: docs/Readme/Docker-Support.md [Link5]: docs/Readme/RunesRepoHub.md [Link6]: docs/Readme/Cronjobs.md [Link7]: docs/Readme/Youtube-Scripts.md [Link8]: docs/Readme/Quick-Installer.md [Link9]: docs/Readme/Quick-Tools.md [Link10]: docs/Readme/Docker-CnC.md"},{"location":"Readme/Main-Menu.html","title":"Main Menu","text":"## Main Menu  ![Alt text](../Images/Main-Menu.png)  ## Update RRHQD   <p>[!NOTE] The script will pull the latest version of the script. Every time you run it, it will update itself. Some updates may require you to restart the script to take effect. </p> <p>[!CAUTION] DO NOT CHANGE THE FILES IN THE RRHQD FOLDER</p> <p>Doing so may break the script. You can modify the files in the RRHQD-Dockers folder.</p>"},{"location":"Readme/Main-Menu.html#help-and-guidance","title":"Help and Guidance","text":"<p>  Requirements  </p> <p>  Installation  </p> <p>  Main Menu  </p> <p>  Docker Support  </p> <p>  RunesRepoHub Software  </p> <p>  Cronjobs  </p> <p>  Youtube Scripts  </p> <p>  Quick Installers  </p> <p>  Quick Tools  </p> <p>  Docker-CnC  </p>"},{"location":"Readme/Quick-Installer.html","title":"Quick Installer","text":"## Quick Installer Support  ![Alt text](../Images/Quick-Installers.png)   <p>[!NOTE] * Starship - A minimalistic, powerful, and extremely customizable prompt for any shell * Tailscale VPN - A private network that makes securing your online activity and managing your devices easy * Filezilla - A free software, cross-platform FTP application that supports FTP, SFTP, and FTPS * Fail2Ban - An intrusion prevention software framework that protects computer servers from brute-force attacks * Ansible - A radically simple IT automation tool * Pydio - An open source cloud collaboration tool</p>"},{"location":"Readme/Quick-Installer.html#help-and-guidance","title":"Help and Guidance","text":"<p>  Requirements  </p> <p>  Installation  </p> <p>  Main Menu  </p> <p>  Docker Support  </p> <p>  RunesRepoHub Software  </p> <p>  Cronjobs  </p> <p>  Youtube Scripts  </p> <p>  Quick Installers  </p> <p>  Quick Tools  </p> <p>  Docker-CnC  </p>"},{"location":"Readme/Quick-Tools.html","title":"Quick Tools","text":"## Quick Tools  ![Alt text](../Images/Quick-Tools.png)  (Early Access) Has not been full tested yet.   <p>[!WARNING] - Disk Space - Check disk space - Security - Check security - Vulnerability - Check vulnerability - Full Scan Check - Check all  - Manually Install Software Updates - Install update from deb file in the download folder - ACS Cleanup - Check for Dubblicate Entries</p>"},{"location":"Readme/Quick-Tools.html#help-and-guidance","title":"Help and Guidance","text":"<p>  Requirements  </p> <p>  Installation  </p> <p>  Main Menu  </p> <p>  Docker Support  </p> <p>  RunesRepoHub Software  </p> <p>  Cronjobs  </p> <p>  Youtube Scripts  </p> <p>  Quick Installers  </p> <p>  Quick Tools  </p> <p>  Docker-CnC  </p>"},{"location":"Readme/Requirements.html","title":"Requirements","text":"## Requirements   <p>[!WARNING] - Sudo (is auto installed by setup) - Docker (is auto installed by setup) - Git (is auto installed by setup) - Curl (is auto installed by setup) - Dialog (is auto installed by setup and has a theme override)</p>   ## Operating Systems Supported   <p>[!TIP] - Debian 10 - 11 - Ubuntu 20.04 - 22.04 - Linuxmint 21.3 - Cinnamon - Kail Linux 2023.4  - Zorin OS - 17 - Core</p>   ## Current Versions   <p>[!CAUTION] 1. Dev = Development branch (Very unstable) 2. PoC = Proof of concept (Nightly Updates) 3. Prod = Production (Stable branch)</p>  ---------------------------------------------------------------------------------------------  ## Help and Guidance   [  Requirements  ][Link1]  [  Installation  ][Link2]  [  Main Menu  ][Link3]  [  Docker Support  ][Link4]  [  RunesRepoHub Software  ][Link5]  [  Cronjobs  ][Link6]  [  Youtube Scripts  ][Link7]  [  Quick Installers  ][Link8]  [  Quick Tools  ][Link9]  [  Docker-CnC  ][Link10]  ---------------------------------------------------------------------------------------------   [Link1]: docs/Readme/Requirements.md [Link2]: docs/Readme/Installation.md [Link3]: docs/Readme/Main-Menu.md [Link4]: docs/Readme/Docker-Support.md [Link5]: docs/Readme/RunesRepoHub.md [Link6]: docs/Readme/Cronjobs.md [Link7]: docs/Readme/Youtube-Scripts.md [Link8]: docs/Readme/Quick-Installer.md [Link9]: docs/Readme/Quick-Tools.md [Link10]: docs/Readme/Docker-CnC.md"},{"location":"Readme/RunesRepoHub.html","title":"RunesRepoHub","text":"## RunesRepoHub Software Support  ![Alt text](../Images/RRH.png)   <p>[!NOTE] * ACS (Automated Content System) - ACS Wiki * News Report Docker (Automated News Reporting System) - NRD Readme * EWD (Easy Web Development) - EWD Repo</p>   ---------------------------------------------------------------------------------------------  ## Help and Guidance   [  Requirements  ][Link1]  [  Installation  ][Link2]  [  Main Menu  ][Link3]  [  Docker Support  ][Link4]  [  RunesRepoHub Software  ][Link5]  [  Cronjobs  ][Link6]  [  Youtube Scripts  ][Link7]  [  Quick Installers  ][Link8]  [  Quick Tools  ][Link9]  [  Docker-CnC  ][Link10]  ---------------------------------------------------------------------------------------------   [Link1]: docs/Readme/Requirements.md [Link2]: docs/Readme/Installation.md [Link3]: docs/Readme/Main-Menu.md [Link4]: docs/Readme/Docker-Support.md [Link5]: docs/Readme/RunesRepoHub.md [Link6]: docs/Readme/Cronjobs.md [Link7]: docs/Readme/Youtube-Scripts.md [Link8]: docs/Readme/Quick-Installer.md [Link9]: docs/Readme/Quick-Tools.md [Link10]: docs/Readme/Docker-CnC.md"},{"location":"Readme/Youtube-Scripts.html","title":"Youtube Scripts","text":"## Youtube Scripts  ![Alt text](../Images/Youtube-Scripts.png)   <p>[!WARNING] (These scripts are made to work with the ACS)</p> <p>IT WILL NOT WORK WITHOUT INSTALLING THE ACS First Install ACS</p> <p>[!NOTE] - Download Youtube Video - Download a youtube playlist - Download Full Youtube Channel - Add a youtube channel to download - Auto Update Youtube Channel Downloads - Check if there are new videos on the channel - Download Youtube Playlist MP3 - Download a youtube playlist in mp3 - Stop all Youtube Downloads - Stop all youtube downloads - Scan all Youtube Downloads - Scan all youtube downloads every 20 min  - Convert Webp to jpeg - For Plex Enabled Thumbnails</p>   ---------------------------------------------------------------------------------------------  ## Help and Guidance   [  Requirements  ][Link1]  [  Installation  ][Link2]  [  Main Menu  ][Link3]  [  Docker Support  ][Link4]  [  RunesRepoHub Software  ][Link5]  [  Cronjobs  ][Link6]  [  Youtube Scripts  ][Link7]  [  Quick Installers  ][Link8]  [  Quick Tools  ][Link9]  [  Docker-CnC  ][Link10]  ---------------------------------------------------------------------------------------------   [Link1]: docs/Readme/Requirements.md [Link2]: docs/Readme/Installation.md [Link3]: docs/Readme/Main-Menu.md [Link4]: docs/Readme/Docker-Support.md [Link5]: docs/Readme/RunesRepoHub.md [Link6]: docs/Readme/Cronjobs.md [Link7]: docs/Readme/Youtube-Scripts.md [Link8]: docs/Readme/Quick-Installer.md [Link9]: docs/Readme/Quick-Tools.md [Link10]: docs/Readme/Docker-CnC.md"}]}