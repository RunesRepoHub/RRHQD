{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"MkDocs/index.html","title":"RRHQD","text":""},{"location":"MkDocs/index.html#introduction","title":"Introduction","text":"<p>Important</p> <p>This software is still in development.</p> <p>Please report bugs to Github</p>"},{"location":"MkDocs/index.html#download-rrhqd","title":"Download RRHQD","text":"<p>Download</p> <ul> <li>Download the latest version of the software from Github</li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html","title":"Setup a Checkmk docker","text":""},{"location":"MkDocs/Setup-Checkmk.html#set-up-instructions","title":"Set up instructions:","text":"<p>Follow the setup these instructions to configure the system.</p> <p>User Input for Docker Image</p> <ul> <li>Prompts the user to input the Docker image for CheckMK. If the user doesn't provide any input, it defaults to \"checkmk/check-mk-raw:latest.\"</li> </ul> <p>User Input for Container Name</p> <ul> <li>Prompts the user to input the name for the CheckMK container. If no input is provided, it defaults to \"checkmk-container.\"</li> </ul> <p>User Input for Exposed Port</p> <ul> <li>Prompts the user to input the port on which CheckMK should be exposed. Defaults to port 8080 if no input is provided.</li> </ul> <p>User Input for Data Path</p> <ul> <li>Prompts the user to input the path for CheckMK data. Defaults to \"./Data/checkmk-data\" if no input is provided.</li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#docker-compose-file-generation","title":"Docker Compose File Generation","text":"<p>Docker Compose File Generation</p> <ul> <li> <p>Defines a subfolder for Docker compose files and creates it if it doesn't exist.</p> </li> <li> <p>Generates a Docker compose file based on user inputs, specifying the CheckMK image, exposed port, and data volume.</p> </li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#inform-user","title":"Inform User","text":"<p>Inform User</p> <ul> <li>Informs the user about the location of the created Docker compose file.</li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#check-docker-status","title":"Check Docker Status","text":"<p>Check Docker Status</p> <ul> <li>Checks if Docker is running, and if not, prompts the user to start Docker and rerun the script. The method of checking depends on the Linux distribution.</li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#start-docker-container","title":"Start Docker Container","text":"<p>Start Docker Container</p> <ul> <li>Uses docker-compose to start the CheckMK container in detached mode (-d). It uses sudo if the OS is Ubuntu, Zorin, Linux Mint, or Kali.</li> </ul>"},{"location":"MkDocs/Setup-Checkmk.html#check-container-start-status","title":"Check Container Start Status","text":"<p>Check Container Start Status</p> <ul> <li>Checks if the Docker container has started successfully. If successful, it displays a success message with the container's name and login details. If not, it shows an error message and exits with an error code.</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html","title":"Setup a Cloudflare Tunnel Docker","text":""},{"location":"MkDocs/Setup-Cloudflare.html#set-up-instructions","title":"Set up instructions","text":"<p>Follow the setup these instructions to configure the system.</p>"},{"location":"MkDocs/Setup-Cloudflare.html#detecting-os-and-setting-sudo","title":"Detecting OS and Setting Sudo","text":"<p>Detecting OS and Setting Sudo</p> <ul> <li>The script starts by determining the operating system to adjust command prefixes accordingly. If the OS is Ubuntu, Kali, Linux Mint, or Zorin, it sets USE_SUDO to \"sudo\".</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#creating-appdata-directory-and-setting-permissions","title":"Creating Appdata Directory and Setting Permissions","text":"<p>Creating Appdata Directory and Setting Permissions</p> <ul> <li>A directory, /mnt/user/appdata/cloudflared/, is created, and its permissions are set to 777. This directory seems to be a storage location for Cloudflared configurations.</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#running-cloudflare-tunnel-login-command","title":"Running Cloudflare Tunnel Login Command","text":"<p>Running Cloudflare Tunnel Login Command</p> <ul> <li>The script runs a Docker command to log in to the Cloudflare Tunnel, interacting with the /mnt/user/appdata/cloudflared/ directory.</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#creating-a-cloudflare-tunnel","title":"Creating a Cloudflare Tunnel","text":"<p>Creating a Cloudflare Tunnel</p> <ul> <li>Another Docker command is used to create a Cloudflare tunnel. The configuration is stored in the same directory, and the tunnel is named based on user input.</li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#configuring-cloudflare-tunnel-for-websites","title":"Configuring Cloudflare Tunnel for Website(s)","text":"<p>Configuring Cloudflare Tunnel for Website(s)</p> <ul> <li> <p>The script prompts the user for information about the website(s) they want to host via the Cloudflare Tunnel. It asks for the number of sites, tunnel UUID, protocol (http/https), reverse proxy IP, port, and domain.</p> </li> <li> <p>Based on the number of sites, it generates a configuration file (config.yml) in the /mnt/user/appdata/cloudflared/ directory.</p> </li> </ul>"},{"location":"MkDocs/Setup-Cloudflare.html#starting-the-cloudflare-tunnel","title":"Starting the Cloudflare Tunnel","text":"<p>Starting the Cloudflare Tunnel</p> <ul> <li> <p>The script concludes by starting the Cloudflare tunnel in detached mode, utilizing the configuration provided by the user.</p> </li> <li> <p>Additionally, for cases where the user wants to host multiple sites, the script uses dialog to display a message box instructing them to manually configure the generated config.yml file for additional sites.</p> </li> </ul>"},{"location":"MkDocs/Setup-Deluge.html","title":"Setup a Deluge Docker","text":""},{"location":"MkDocs/Setup-Deluge.html#set-up-instructions","title":"Set up instructions","text":"<p>Follow the setup these instructions to configure the system.</p> <p>Docker Image</p> <ul> <li>The script prompts the user to input the Docker image for Deluge. If no input is provided, it defaults to \"lscr.io/linuxserver/deluge:latest\".</li> </ul> <p>Container Name</p> <ul> <li>The user is asked to enter a name for the Docker container. If no input is given, it defaults to \"deluge-container\".</li> </ul> <p>Folders</p> <ul> <li>The script requests the Deluge root folder and download folder. If skipped, default settings (./Data/config for Deluge root folder and ./Data/downloads for the download folder) are used.</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#docker-compose-file-generation","title":"Docker Compose File Generation","text":"<p>Docker Compose Generation</p> <ul> <li>It sets up a subfolder for Docker Compose files (./RRHQD-Dockers/Deluge) and creates a Docker Compose file (docker-compose-$CONTAINER_NAME.yml).</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#docker-compose-file-content","title":"Docker Compose File Content","text":"<p>Docker Compose Content</p> <ul> <li>The content is generated dynamically using a heredoc. It includes specifications for the Docker Compose version, Deluge service settings (image, container name, network mode, environment variables, volume mappings, ports, and restart policy).</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#folder-creation","title":"Folder Creation","text":"<p>Folder Creation</p> <ul> <li>The script ensures the existence of the subfolder for Docker Compose files, creating it if necessary.</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#inform-user-and-start-container","title":"Inform User and Start Container","text":"<p>Inform User and Start Container</p> <ul> <li>The user is informed that the Docker Compose file for Deluge has been created. The script attempts to start the Deluge container using docker compose -f $COMPOSE_FILE up -d.</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#check-container-status","title":"Check Container Status","text":"<p>Check Container Status</p> <ul> <li>After the attempt to start the container, it checks if the Docker container has started successfully by querying Docker for the container's ID.</li> </ul>"},{"location":"MkDocs/Setup-Deluge.html#user-notification","title":"User Notification","text":"<p>User Notification</p> <ul> <li>If the container started successfully, a success message is displayed using dialog. Otherwise, an error message is shown, and the script exits with an error code.</li> </ul>"},{"location":"MkDocs/Setup-Linkwarden.html","title":"Setup a Linkwarden docker","text":""},{"location":"MkDocs/Setup-Linkwarden.html#set-up-instructions","title":"Set up instructions","text":"<p>Follow the setup these instructions to configure the system.</p>"},{"location":"MkDocs/Setup-Linkwarden.html#setting-environment-variables","title":"Setting Environment Variables","text":"<p>Setting Environment Variables</p> <p>You'll be asked to provide three pieces of information:</p> <ul> <li> <p>NEXTAUTH_SECRET: A secret key for authentication.</p> </li> <li> <p>NEXTAUTH_URL: The URL for authentication requests.</p> </li> <li> <p>POSTGRES_PASSWORD: Password for the PostgreSQL database.</p> </li> </ul> <pre><code>Enter the NEXTAUTH_SECRET (it should look like ^7yTjn@G$j@KtLh9&amp;@UdMpdfDZ):\nEnter the NEXTAUTH_URL (it should look like 'http://localhost:3000/api/v1/auth'):\nEnter the POSTGRES_PASSWORD:\n</code></pre>"},{"location":"MkDocs/Setup-Linkwarden.html#validation","title":"Validation","text":"<p>Validation</p> <ul> <li>Make sure not to leave any field empty; otherwise, an error will be displayed.</li> </ul> <pre><code>NEXTAUTH_SECRET is empty. Please enter a valid secret.\n</code></pre>"},{"location":"MkDocs/Setup-Linkwarden.html#write-to-env-file","title":"Write to .env File","text":"<p>Write to .env File</p> <ul> <li>If all values are provided, they will be stored in a .env file.</li> </ul> <pre><code>NEXTAUTH_SECRET=&lt;your_secret&gt;\nNEXTAUTH_URL=&lt;your_url&gt;\nPOSTGRES_PASSWORD=&lt;your_password&gt;\n</code></pre>"},{"location":"MkDocs/Setup-Linkwarden.html#run-docker-compose","title":"Run Docker Compose","text":"<p>Run Docker Compose</p> <ul> <li>The setup initiates Docker Compose to start the container in the background.</li> </ul> <pre><code>docker compose up -d\n</code></pre>"},{"location":"MkDocs/Setup-Linkwarden.html#check-container-status","title":"Check Container Status","text":"<p>Check Container Status</p> <ul> <li>After starting, it checks if the Docker container is running successfully. bash</li> </ul> <pre><code>The Docker container ghcr.io/linkwarden/linkwarden:latest has started successfully.\n</code></pre> <ul> <li>If there's an issue, an error message will advise you to check the logs for more details. sql</li> </ul> <pre><code>Failed to start the Docker container ghcr.io/linkwarden/linkwarden:latest. Please check the logs for details.\n</code></pre>"},{"location":"Readme/Cronjobs.html","title":"Cronjobs","text":""},{"location":"Readme/Cronjobs.html#cronjobs","title":"Cronjobs","text":"<p>[!NOTE] - Add a nightly reboot at 4:45 am - Daily midnight update (Debian Systems) - Add a reboot cronjob for every Sunday at 00:00 am - Cronjob Manager - Easy and quick custom cronjob - Cronmointer - Easy WebGUI Interface to keep track of cronjobs</p>"},{"location":"Readme/Docker-CnC.html","title":"Docker CnC","text":""},{"location":"Readme/Docker-CnC.html#docker-command-and-control","title":"Docker Command and Control","text":"<p>[!NOTE] - Docker - Cleanup (Clean all unused images, volumes and networks) - Docker - Remove (Stop and Delete a Docker) - Docker - Reset (Reset Docker - Delete everything) - Docker - Start (Start one or more Dockers) - Docker - Stop (Stop one or more Dockers) - Docker - Update (Update a Docker)</p>"},{"location":"Readme/Docker-Support.html","title":"Docker Support","text":""},{"location":"Readme/Docker-Support.html#docker-support","title":"Docker Support","text":"<p>Every docker \"Installer\" has been tested and is working.</p> <p>[!IMPORTANT] Pay attention to:</p> <ul> <li>If the input can be skipped or not. (Else the docker might not work)</li> <li>All dockers are in the \"RRHQD-Dockers\" folder. </li> <li>All dockers are made using docker compose files.</li> <li>All docker compose files are located in \"RRHQD-Dockers\"</li> </ul>"},{"location":"Readme/Docker-Support.html#docker-images-currently-supported","title":"Docker images currently supported","text":"<p>[!NOTE] - Uptime-Kuma - A fancy self-hosted monitoring tool - Vaultwarden - An unofficial Bitwarden compatible server - Cloudflare Tunnel - Securely connect your network to the Internet - MediaCMS - A modern, fully featured open source video and media CMS (Not supported, due to unstable scripts, working on fix) - CheckMK - A unified monitoring and alerting system - MySQL - The world's most popular open source database - NTFY - A simple and powerful notification service - Postgres - The world's most popular open source database - N8N - A workflow automation platform - llama-GPT - A modern, open source chat bot. - Portainer - A web management interface for Docker - Deluge - A lightweight torrent client - Ghost - A simple, powerful, and open source content management system - Radarr - A self-hosted media server download manager and torrent tracker for movies - Sonarr - A self-hosted media server download manager and torrent tracker for shows - Ombi - A self-hosted reqests and media management system - It-tools - A collection of tools for IT professionals - Linkwarden - A self-hosted url manager - Memos - A self-hosted twitter-ish service</p>"},{"location":"Readme/Installation.html","title":"How to use","text":""},{"location":"Readme/Installation.html#dependencies-folders","title":"Dependencies folders","text":"<p>[!WARNING] * RRHQD * RRHQD-Dockers</p> <p>Note: The Docker compose files and the docker volumes are stored in the \"RRHQD-Dockers\" folder (SO DONT DELETE IT, unless you know what you are doing). The \"RRHQD\" folder is the main folder for the script.</p> <p>[!TIP] - Run the setup via the command below.</p> <ul> <li> <p>Follow the setup \"guide\" after.</p> </li> <li> <p>When asked what branch do you want to use, select the branch you want to use. If you want to use a stable branch, select \"Prod\".</p> </li> <li> <p>If you want to the nightly updated code base, then use the \"PoC\" branch.</p> </li> </ul> <p>[!CAUTION] Don't use the Dev branch</p>"},{"location":"Readme/Installation.html#setup-command","title":"Setup Command","text":"<pre><code>bash &lt;(wget -qO- https://raw.githubusercontent.com/RunesRepoHub/RRHQD/Prod/Setup.sh)\n</code></pre>"},{"location":"Readme/Installation.html#custom-commands","title":"Custom Commands","text":"<p>[!NOTE] To use custom commands you will have to run </p> <p>[!WARNING] This is for Ubuntu, Debian, Zorin OS and Linux Mint.</p> <pre><code>source ~/.bashrc\n</code></pre> <p>[!WARNING] This is for Kali Linux</p> <pre><code>source ~/.zshrc\n</code></pre> <p>[!TIP] If you want to access the script again after exiting it use the command below.</p> <pre><code>qd\n</code></pre>"},{"location":"Readme/Main-Menu.html","title":"Main Menu","text":""},{"location":"Readme/Main-Menu.html#main-menu","title":"Main Menu","text":""},{"location":"Readme/Main-Menu.html#update-rrhqd","title":"Update RRHQD","text":"<p>[!NOTE] The script will pull the latest version of the script. Every time you run it, it will update itself. Some updates may require you to restart the script to take effect. </p> <p>[!CAUTION] DO NOT CHANGE THE FILES IN THE RRHQD FOLDER</p> <p>Doing so may break the script. You can modify the files in the RRHQD-Dockers folder.</p>"},{"location":"Readme/Quick-Installer.html","title":"Quick Installer","text":""},{"location":"Readme/Quick-Installer.html#quick-installer-support","title":"Quick Installer Support","text":"<p>[!NOTE] * Starship - A minimalistic, powerful, and extremely customizable prompt for any shell * Tailscale VPN - A private network that makes securing your online activity and managing your devices easy * Filezilla - A free software, cross-platform FTP application that supports FTP, SFTP, and FTPS * Fail2Ban - An intrusion prevention software framework that protects computer servers from brute-force attacks * Ansible - A radically simple IT automation tool * Pydio - An open source cloud collaboration tool</p>"},{"location":"Readme/Quick-Tools.html","title":"Quick Tools","text":""},{"location":"Readme/Quick-Tools.html#quick-tools","title":"Quick Tools","text":"<p>(Early Access) Has not been full tested yet.</p> <p>[!WARNING] - Disk Space - Check disk space - Security - Check security - Vulnerability - Check vulnerability - Full Scan Check - Check all  - Manually Install Software Updates - Install update from deb file in the download folder - ACS Cleanup - Check for Dubblicate Entries</p>"},{"location":"Readme/Requirements.html","title":"Requirements","text":""},{"location":"Readme/Requirements.html#requirements","title":"Requirements","text":"<p>[!WARNING] - Sudo (is auto installed by setup) - Docker (is auto installed by setup) - Git (is auto installed by setup) - Curl (is auto installed by setup) - Dialog (is auto installed by setup and has a theme override)</p>"},{"location":"Readme/Requirements.html#operating-systems-supported","title":"Operating Systems Supported","text":"<p>[!TIP] - Debian 10 - 11 - Ubuntu 20.04 - 22.04 - Linuxmint 21.3 - Cinnamon - Kail Linux 2023.4  - Zorin OS - 17 - Core</p>"},{"location":"Readme/Requirements.html#current-versions","title":"Current Versions","text":"<p>[!CAUTION] 1. Dev = Development branch (Very unstable) 2. PoC = Proof of concept (Nightly Updates) 3. Prod = Production (Stable branch)</p>"},{"location":"Readme/RunesRepoHub.html","title":"RunesRepoHub","text":""},{"location":"Readme/RunesRepoHub.html#runesrepohub-software-support","title":"RunesRepoHub Software Support","text":"<p>[!NOTE] * ACS (Automated Content System) - ACS Wiki * News Report Docker (Automated News Reporting System) - NRD Readme * EWD (Easy Web Development) - EWD Repo</p>"},{"location":"Readme/Youtube-Scripts.html","title":"Youtube Scripts","text":""},{"location":"Readme/Youtube-Scripts.html#youtube-scripts","title":"Youtube Scripts","text":"<p>[!WARNING] (These scripts are made to work with the ACS)</p> <p>IT WILL NOT WORK WITHOUT INSTALLING THE ACS First Install ACS</p> <p>[!NOTE] - Download Youtube Video - Download a youtube playlist - Download Full Youtube Channel - Add a youtube channel to download - Auto Update Youtube Channel Downloads - Check if there are new videos on the channel - Download Youtube Playlist MP3 - Download a youtube playlist in mp3 - Stop all Youtube Downloads - Stop all youtube downloads - Scan all Youtube Downloads - Scan all youtube downloads every 20 min </p>"}]}