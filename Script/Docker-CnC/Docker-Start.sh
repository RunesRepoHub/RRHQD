#!/bin/bash

LOG_DIR="$HOME/RRHQD/logs"
# Configuration
LOG_FILE="$LOG_DIR/docker_start.log"  # Log file location

# Function to increment log file name
increment_log_file_name() {
  local log_file_base_name="docker_start_run_"
  local log_file_extension=".log"
  local log_file_counter=1

  while [[ -f "$LOG_DIR/${log_file_base_name}${log_file_counter}${log_file_extension}" ]]; do
    ((log_file_counter++))
  done

  LOG_FILE="$LOG_DIR/${log_file_base_name}${log_file_counter}${log_file_extension}"
  echo "Log file will be saved as $LOG_FILE"
}

# Create log directory if it doesn't exist
mkdir -p "$LOG_DIR"

# Increment log file name for this run
increment_log_file_name

# Redirect all output to the log file
exec > >(tee -a "$LOG_FILE") 2>&1

# Define the dialog exit status codes
: "${DIALOG_OK=0}"
: "${DIALOG_CANCEL=1}"
: "${DIALOG_ESC=255}"

# Function to generate a list of Docker containers for dialog
generate_container_list() {
  mapfile -t containers < <(sudo docker ps -a --format "{{.Names}}")
  local container_list=()
  for i in "${!containers[@]}"; do
    container_list+=("$((i+1))" "${containers[i]}" OFF)
  done
  echo "${container_list[@]}"
}

# Function to show dialog for container selection
show_dialog() {
  local container_list=($(generate_container_list))
  dialog --title "Select Docker containers to start" \
         --checklist "Use SPACE to select containers, ENTER to confirm:" 15 60 4 \
         "${container_list[@]}" 2> selections.txt
}

# Show the dialog to the user and get the selections
show_dialog

# Function to start selected Docker containers
start_selected_containers() {
  local selected_containers=()
  local idx
  local CONTAINER_NAME

  # Read selections from file generated by dialog
  mapfile -t selections < selections.txt

  # Validate selections and prepare container names
  for selection in "${selections[@]}"; do
    idx=$((selection - 1))
    if [[ idx -ge 0 && idx -lt ${#containers[@]} ]]; then
        selected_containers+=("${containers[idx]}")
    else
        echo "Invalid selection: $selection"
        dialog --msgbox "Invalid selection: $selection" 6 40
    fi
  done

  # Start the chosen Docker containers
  for CONTAINER_NAME in "${selected_containers[@]}"; do
    if sudo docker start "$CONTAINER_NAME"; then
      echo "$CONTAINER_NAME started successfully."
      dialog --msgbox "$CONTAINER_NAME started successfully." 6 40
    else
      echo "Failed to start $CONTAINER_NAME."
      dialog --msgbox "Failed to start $CONTAINER_NAME." 6 40
    fi
  done

  # Cleanup
  rm -f selections.txt
}

# Check exit status of dialog
exit_status=$?
if [[ $exit_status != $DIALOG_OK ]]; then
  echo "Container selection canceled."
  dialog --msgbox "Container selection canceled." 6 40
  exit 1
else
  start_selected_containers
  dialog --msgbox "All selected Docker containers have been started." 6 40
fi
